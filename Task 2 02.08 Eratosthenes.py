# Написать два алгоритма нахождения i-го по счёту простого числа используя «Решето Эратосфена»
# import time

# start_time = time.time()

n = int(input("Вывод простых чисел до числа: "))
a = [0] * n  # создание массива с n количеством элементов                               # O(N)
for i in range(n):  # заполнение массива ...                                            # O(N)
    a[i] = i  # значениями от 0 до n-1                                                  # O(1)

# вторым элементом является единица, которую не считают простым числом
# забиваем ее нулем.
a[1] = 0                                                                                # O(1)

m = 2  # замена на 0 начинается с 3-го элемента (первые два уже нули)
while m < n:  # перебор всех элементов до заданного числа                               # O(N)
    if a[m] != 0:  # если он не равен нулю, то
        j = m * 2  # увеличить в два раза (текущий элемент - простое число)
        while j < n:
            a[j] = 0  # заменить на 0                                                   # O(1)
            j = j + m  # перейти в позицию на m больше
    m += 1

# вывод простых чисел на экран (может быть реализован как угодно)
b = []                                                                                  # O(1)
for i in a:                                                                             # O(N)
    if a[i] != 0:
        b.append(a[i])                                                                  # O(1)

del a                                                                                   # O(N)
print(b)

# print(time.time() - start_time) # 5 запусков (для точности) со значением 57 дали результат по времени 1.766
